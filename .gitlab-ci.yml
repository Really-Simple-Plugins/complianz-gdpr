stages:
  - test

# Select what we should cache
cache:
  paths:
    - vendor/

services:
  - mysql

# before_script will run on ALL PHP versions listed in test
before_script:
  # Install git, the php image doesn't have it installed
  - apt-get update -yqq
  - apt-get install git -yqq
  # required for "PHP 7.4+
  - apt-get install libonig-dev -yqq

  # install the required packages for the running CI tests
  - apt-get -yqqf install wget zip unzip subversion default-mysql-client libmcrypt-dev default-libmysqlclient-dev default-mysql-server --fix-missing

  # Install mysql driver
  - docker-php-ext-install mysqli pdo_mysql mbstring

  # Install Xdebug. See https://xdebug.org/docs/compat for which version to install
  - pecl install xdebug-${XDEBUG_VERSION}
  # XDEBUG mode has to be set to coverage
  - echo xdebug.mode=coverage > /usr/local/etc/php/conf.d/xdebug.ini

  # PHP extensions
  - docker-php-ext-enable mysqli pdo_mysql mbstring xdebug

  # Install composer
  - curl -sS https://getcomposer.org/installer | php

  # Install all project dependencies
  - php composer.phar install --ignore-platform-reqs
  - php composer.phar update
  # Set up WP test environment
  - bash bin/install-wp-tests.sh wordpress_test root mysql mysql $WP_VERSION

  # Install WP-CLI
  - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
  - chmod +x wp-cli.phar
  - mv wp-cli.phar /usr/local/bin/wp
  - wp core download --allow-root
  - wp core config --dbhost=mysql --dbname=wordpress_tests --dbuser=root --dbpass=mysql --allow-root
  - wp config list --allow-root
  - wp core install --url=http://localhost --title=Example --admin_user=supervisor --admin_password=strongpassword --admin_email=info@example.com --allow-root

  # Zip current plugin to allow it to be installed using wp-cli
  - zip -r complianz-gdpr.zip .
  # Install the new plugin in our WP installation
  - wp plugin install complianz-gdpr.zip --allow-root --force
  - wp plugin activate complianz-gdpr --allow-root
  - wp plugin deactivate complianz-gdpr --allow-root
  - wp plugin uninstall complianz-gdpr --allow-root
  # Now test an upgrade
  - wp plugin install complianz-gdpr --allow-root
  - wp plugin activate complianz-gdpr --allow-root
  - wp plugin install complianz-gdpr.zip --allow-root --force
  - wp plugin deactivate complianz-gdpr --allow-root
  # WP plugin uninstall because otherwise uninstall.php won't run!
  - wp plugin uninstall complianz-gdpr --allow-root

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: wordpress_tests
  MYSQL_ROOT_PASSWORD: mysql
  WP_VERSION: latest
  WP_MULTISITE: "0"

# We test PHP 7.4
test:php7.4:
  image: php:7.4
  variables:
    XDEBUG_VERSION: "3.1.6"
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clove --colors=never --debug
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'

# We test PHP7.4 with multisite
test:php7.4:multisite:
  variables:
    WP_MULTISITE: "1"
    XDEBUG_VERSION: "3.1.6"
  image: php:7.4
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clove --colors=never
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'

# We test PHP8.2
test:php8.2:
  image: php:8.2
  variables:
    XDEBUG_VERSION: "3.2.1"
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover --colors=never
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'

# We test PHP8.2 with multisite
test:php8.2:multisite:
  variables:
    WP_MULTISITE: "1"
    XDEBUG_VERSION: "3.2.1"
  image: php:8.2
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clove --colors=never
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'

# We test WordPress 5.9 with PHP 8.2
test:php8.2:wordpress5.9:
  image: php:8.2
  variables:
    XDEBUG_VERSION: "3.2.1"
    WP_VERSION: "5.9"
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover --colors=never
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'

# We test WordPress 5.9 with PHP 8.2 and multisite
test:php8.2:wordpress5.9:multisite:
  image: php:8.2
  variables:
    WP_MULTISITE: "1"
    XDEBUG_VERSION: "3.2.1"
    WP_VERSION: "5.9"
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clove --colors=never
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'